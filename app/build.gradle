plugins {
    id 'com.android.application'
    id 'kotlin-android'
    //id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs.kotlin"
}


def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(rootProject.file("apikey.properties")))


def versionString = "0.14.0"
def versionNumber = 29
def showWhatsNew = "true"

static def getDate() {
    return new Date().format('yyyy.MMdd')
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "net.c306.photopress"
        minSdk 26
        targetSdk 32
        versionCode versionNumber
        versionName "${getDate()}.${versionString}"

        // should correspond to key/value pairs inside the file
        buildConfigField("String", "WP_ID", apiKeyProperties['CLIENT_ID'])
        buildConfigField("String", "WP_SECRET", apiKeyProperties['CLIENT_SECRET'])

        buildConfigField("boolean", "SHOW_WHATS_NEW", showWhatsNew)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        // Export schema location
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        // Incremental processing annotations
                        "room.incremental"     : "true"
                ]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
//            minifyEnabled true
//            shrinkResources true
            minifyEnabled false
            shrinkResources false

            applicationIdSuffix ".debug"

//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "versionString"

    productFlavors {
        elsa {
            versionName "${getDate()}.${versionString}"
        }

        granny {
            versionName "${getDate()}.${versionString}-granny"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    namespace 'net.c306.photopress'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Core
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Networking
    def okhttp_version = '4.11.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Images
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'

    // WorkManager
    def work_version = "1.0.1"
    implementation "android.arch.work:work-runtime-ktx:$work_version"

    // Better logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // In-app billing
//    implementation 'com.android.billingclient:billing:2.2.0'

    // Kotlin co-routines
    def coroutine_version = '1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Material design
    implementation 'com.google.android.material:material:1.9.0'

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Lifecycle
    def lifecycle_version = '2.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Settings
    def preference_version = '1.2.0'
    implementation "androidx.preference:preference-ktx:$preference_version"

    // Viewpager for welcome screen
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'com.airbnb.android:lottie:3.4.4'

    // Room database
    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    // testImplementation "androidx.room:room-testing:$room_version"

    // Testing
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Photo view for viewing full image
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // My custom components
    implementation "com.github.adityabhaskar:CustomComponents:0.1.33"
}
