plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs.kotlin"
    id "com.google.devtools.ksp"
}


def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(rootProject.file("apikey.properties")))


def versionString = "0.14.1"
def versionNumber = 5036
def showWhatsNew = "false"

static def getDate() {
    return new Date().format('yyyy.MMdd')
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(libs.versions.java.get()))
    }
}

android {
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "net.c306.photopress"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode versionNumber
        versionName "${getDate()}.${versionString}"

        // should correspond to key/value pairs inside the file
        buildConfigField("String", "WP_ID", apiKeyProperties['CLIENT_ID'])
        buildConfigField("String", "WP_SECRET", apiKeyProperties['CLIENT_SECRET'])

        buildConfigField("boolean", "SHOW_WHATS_NEW", showWhatsNew)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        // Export schema location
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        // Incremental processing annotations
                        "room.incremental"     : "true"
                ]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
//            minifyEnabled true
//            shrinkResources true
            minifyEnabled false
            shrinkResources false

            applicationIdSuffix ".debug"

//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "versionString"

    productFlavors {
        elsa {
            versionName "${getDate()}.${versionString}"
        }

        granny {
            versionName "${getDate()}.${versionString}-granny"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.toVersion(libs.versions.java.get())
        targetCompatibility JavaVersion.toVersion(libs.versions.java.get())
    }

    buildFeatures {
        viewBinding true
    }
    namespace 'net.c306.photopress'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libs.kotlin.stdlib.jdk7

    // Core
    implementation libs.androidx.legacySupport
    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.constraintlayout

    // Networking
    implementation libs.okhttp
    implementation libs.okhttp.loggingInterceptor
    implementation libs.retrofit
    implementation libs.retrofit.converter.gson

    // Images
    implementation libs.glide
//    annotationProcessor libs.compiler
    ksp libs.glide.compiler

    // WorkManager
    implementation(libs.androidx.work.runtime.ktx)

    // Better logging
    implementation libs.timber

    // Kotlin co-routines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    // Material design
    implementation libs.google.material

    // Navigation component
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    // Lifecycle
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.livedata.ktx

    // Settings
    implementation libs.androidx.preference.ktx

    // Viewpager for welcome screen
    implementation libs.androidx.viewpager2
    implementation libs.airbnb.lottie

    // Room database
    implementation libs.androidx.room.runtime
    ksp libs.androidx.room.compiler
    implementation libs.androidx.room.ktx
    implementation libs.javax.annotation
    // testImplementation libs.androidx.room.testing

    // Testing
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Photo view for viewing full image
    implementation libs.cb.photoView

    // My custom components
    implementation libs.ab.customComponents
}